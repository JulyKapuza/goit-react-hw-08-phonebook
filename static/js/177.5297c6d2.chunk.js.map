{"version":3,"file":"static/js/177.5297c6d2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLable\":\"ContactForm_formLable__p2unz\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilterValue = state => state.filter;\n","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { addContact } from 'redux/contacts/contactsOperation';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const type = e.target.name;\n    switch (type) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setPhone(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      reset();\n\n      return Notiflix.Notify.info(`${name} is already in contacts`);\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.formLable}>\n        Name\n        <input\n          className={css.formInput}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.formLable}>\n        Number\n        <input\n          className={css.formInput}\n          value={phone}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contacts\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__Z4FuP\",\"contactText\":\"ContactItem_contactText__qYTBS\",\"contactBtn\":\"ContactItem_contactBtn__nMiN-\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperation';\n\nexport default function ContactItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <li className={css.contactItem}>\n      <p className={css.contactText}>\n        {name} {number}\n      </p>\n      <button className={css.contactBtn} type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n}\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport css from './ContactList.module.css';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { getFilterValue, getContacts } from 'redux/contacts/selectors';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperation';\nimport { useEffect } from 'react';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filterValue = useSelector(getFilterValue);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue)\n  );\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <ul className={css.contactList}>\n          {visibleContacts.map(({ id, name, number }) => (\n            <ContactItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n            ></ContactItem>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLable\":\"Filter_filterLable__GyV6u\",\"filterImput\":\"Filter_filterImput__amMjC\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeValue } from 'redux/contacts/filterSlice';\nimport { getFilterValue } from 'redux/contacts/selectors';\n\nexport default function Filter() {\n  const filterValue = useSelector(getFilterValue);\n\n  const dispatch = useDispatch();\n\n  return (\n    <label className={css.filterLable}>\n      Find contact by name\n      <input\n        className={css.filterImput}\n        type=\"text\"\n        value={filterValue}\n        onChange={e => dispatch(changeValue(e.target.value))}\n      />\n    </label>\n  );\n}\n","import React from 'react';\nimport { MagnifyingGlass } from 'react-loader-spinner';\n\nconst MyLoader = props => (\n <MagnifyingGlass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"MagnifyingGlass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"MagnifyingGlass-wrapper\"\n  glassColor = '#c0efff'\n  color = '#e15b64'\n/>\n);\n\nexport default MyLoader;","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport MyLoader from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\n\nconst styles = {\n  title: {\n    color: '#6a79a6',\n    marginBottom: 20,\n    textTransform: 'uppercase',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  subtitle: {\n    color: '#6a79a6',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n};\n\nexport default function Contacts() {\n  const { isLoading, error } = useSelector(state => state.contacts);\n  return (\n    <>\n      <h1 style={styles.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 style={styles.subtitle}>Contacts</h2>\n      <Filter />\n      {isLoading && <MyLoader />}\n      {error && <h2>An error: {error}</h2>}\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilterValue","filter","ContactForm","useState","name","setName","phone","setPhone","useSelector","dispatch","useDispatch","handleChange","e","target","currentTarget","value","reset","onSubmit","preventDefault","form","elements","number","some","contact","toLowerCase","Notiflix","addContact","className","css","onChange","type","pattern","title","required","ContactItem","id","onClick","deleteContact","ContactList","useEffect","fetchContacts","filterValue","visibleContacts","includes","length","map","Filter","changeValue","props","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","styles","marginBottom","textTransform","fontSize","textAlign","subtitle","Contacts","isLoading","error","style"],"sourceRoot":""}